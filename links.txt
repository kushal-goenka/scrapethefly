https://dev.to/ziv/running-puppeteer-on-heroku-free-tier-e7b

Puppeteer Cloud Function:

https://www.bram.us/2019/12/02/building-a-website-screenshot-api-with-puppeteer-and-google-cloud-functions/

https://medium.com/benextcompany/how-to-web-scrape-with-puppeteer-in-google-cloud-functions-59ad86d3abdc

Cloud Run Docker:

https://stackoverflow.com/questions/59160869/how-to-get-puppeteer-working-in-google-cloud-run-cloud-build


AWS Lambda:


https://acloudguru.com/blog/engineering/serverless-browser-automation-with-aws-lambda-and-puppeteer

https://github.com/aws-samples/scheduled-website-screenshot-app

https://hackerrdave.com/lambda-layer-chrome-puppeteer/

https://javascriptwebscrapingguy.com/getting-puppeteer-working-on-lambda/

https://medium.com/swlh/amazonian-puppeteer-b590d199dfdc

https://medium.com/techmagic/how-to-get-headless-chrome-running-on-aws-lambda-643aae03c672




Generic Express _Puppeteer:

https://joshblf.medium.com/web-scraping-with-express-and-puppeteer-1c1b47bb2a21

https://dev.to/waqasabbasi/building-a-search-engine-api-with-node-express-and-puppeteer-using-google-search-4m21


using Efficient Google cloud funciton:

https://www.ribice.ba/cloud-function-html-to-pdf/



Packaging:

https://medium.com/jspoint/how-to-create-an-executable-exe-file-from-javascript-code-using-node-js-45154ba4de20


Pure Puppeteer:

https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-on-heroku

https://medium.com/@e_mad_ehsan/getting-started-with-puppeteer-and-chrome-headless-for-web-scrapping-6bf5979dee3e


Download Github Artifact:

https://github.com/actions/upload-artifact/issues/21


Docker Puppeteer:
https://github.com/buildkite/docker-puppeteer/blob/master/example/integration-tests/index.test.js

https://nodejs.org/en/docs/guides/nodejs-docker-webapp/








Other:


        previousHeight = await page.evaluate('document.body.scrollHeight');

        // https://stackoverflow.com/questions/442404/retrieve-the-position-x-y-of-an-html-element-relative-to-the-browser-window
        // previousHeight = await page.evaluate('document.querySelector(".storiesEarlier").getBoundingClientRect().y');
        console.log(previousHeight);
        // await page.evaluate('window.scrollTo(0, document.querySelector(".storiesEarlier").getBoundingClientRect().y)');
        await page.evaluate('window.scrollTo(0,document.body.scrollHeight)');
        await page.waitForFunction(`document.body.scrollHeight > ${previousHeight}`);
        // await page.waitForTimer(1000);

        




